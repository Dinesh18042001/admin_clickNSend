{"version":3,"file":"static/js/849.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/index.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/features-max.mjs","../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs"],"sourcesContent":["class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, isNullish, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return options.type === \"spring\" || !isWaapiSupportedEasing(options.ease);\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff, \n/**\n * Currently used to remove values from will-change when an animation ends.\n * Preferably this would be handled by event listeners on the MotionValue\n * but these aren't consistent enough yet when considering the different ways\n * an animation can be cancelled.\n */\nonEnd) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n            onEnd && onEnd();\n        },\n        onStop: onEnd,\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.3.8\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { MotionValue } from '../index.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\nimport { removeItem } from '../../utils/array.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.output = [];\n        this.counts = new Map();\n    }\n    add(name) {\n        const styleName = getWillChangeName(name);\n        if (!styleName)\n            return;\n        /**\n         * Update counter. Each value has an indepdent counter\n         * as multiple sources could be requesting the same value\n         * gets added to will-change.\n         */\n        const prevCount = this.counts.get(styleName) || 0;\n        this.counts.set(styleName, prevCount + 1);\n        if (prevCount === 0) {\n            this.output.push(styleName);\n            this.update();\n        }\n        /**\n         * Prevents the remove function from being called multiple times.\n         */\n        let hasRemoved = false;\n        return () => {\n            if (hasRemoved)\n                return;\n            hasRemoved = true;\n            const newCount = this.counts.get(styleName) - 1;\n            this.counts.set(styleName, newCount);\n            if (newCount === 0) {\n                removeItem(this.output, styleName);\n                this.update();\n            }\n        };\n    }\n    update() {\n        this.set(this.output.length ? this.output.join(\", \") : \"auto\");\n    }\n}\nfunction useWillChange() {\n    return useConstant(() => new WillChangeMotionValue(\"auto\"));\n}\n\nexport { WillChangeMotionValue, useWillChange };\n","import { WillChangeMotionValue } from './index.mjs';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    var _a;\n    if (!visualElement.applyWillChange)\n        return;\n    let willChange = visualElement.getValue(\"willChange\");\n    /**\n     * If we haven't created a willChange MotionValue, and the we haven't been\n     * manually provided one, create one.\n     */\n    if (!willChange && !((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange)) {\n        willChange = new WillChangeMotionValue(\"auto\");\n        visualElement.addValue(\"willChange\", willChange);\n    }\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n            this.removeWillChange = addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        var _a;\n        (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false, addValueToWillChange(this.visualElement, axis)));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction isOptimisedAppearTree(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return false;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement) {\n        return false;\n    }\n    else if (getOptimisedAppearId(visualElement)) {\n        return true;\n    }\n    else if (projectionNode.parent &&\n        !projectionNode.parent.hasCheckedOptimisedAppear) {\n        return isOptimisedAppearTree(projectionNode.parent);\n    }\n    else {\n        return false;\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (window.MotionDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (window.MotionDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.HandoffCancelAllAnimations &&\n                isOptimisedAppearTree(this)) {\n                window.HandoffCancelAllAnimations();\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (window.MotionDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (window.MotionDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (window.MotionDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff, addValueToWillChange(visualElement, key)));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            this.isRenderScheduled = false;\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.isRenderScheduled = false;\n        this.scheduleRender = () => {\n            if (!this.isRenderScheduled) {\n                this.isRenderScheduled = true;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.3.8\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.3.8 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { drag } from '../../motion/features/drag.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\nimport { domAnimation } from './features-animation.mjs';\n\n/**\n * @public\n */\nconst domMax = {\n    ...domAnimation,\n    ...drag,\n    ...layout,\n};\n\nexport { domMax };\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n"],"names":["Feature","constructor","node","this","isMounted","update","warning","noop","invariant","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","arguments","length","undefined","point","x","concat","y","addPointerInfo","handler","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","addDomEvent","target","eventName","options","passive","addEventListener","removeEventListener","addPointerEvent","combineFunctions","a","b","v","pipe","_len","transformers","Array","_key","reduce","distance","Math","abs","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","window","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","sqrt","distance2D","offset","timestamp","frameData","push","onStart","onMove","handlePointerMove","transformPoint","frame","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","type","initialInfo","onSessionStart","removeListeners","updateHandlers","cancelFrame","subtractPoint","_ref","delta","lastDevicePoint","startDevicePoint","velocity","getVelocity","timeDelta","i","timestampedPoint","lastPoint","time","currentVelocity","Infinity","createLock","name","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","progress","from","to","value","toFromDifference","mixNumber","SCALE_MIN","SCALE_MAX","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","axis","max","min","calcAxisDelta","source","origin","originPoint","scale","translate","isNaN","calcBoxDelta","originX","originY","calcRelativeAxis","relative","parent","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","callback","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","hasTransform","values","has2DTranslate","z","rotate","rotateX","rotateY","skewX","skewY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","transform","measureViewportBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","transformProps","has","startsWith","getValueTransition","transition","key","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","index","now","clearTime","set","isProcessing","MotionGlobalConfig","useManualTiming","performance","newTime","queueMicrotask","isZeroValueString","test","isNumericalString","splitCSSVariableRegex","getVariableValue","current","element","depth","token","fallback","match","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","trim","parseFloat","isCSSVariableToken","positionalKeys","Set","isNumOrPxType","number","px","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","transformPropOrder","positionalValues","width","_ref2","_ref3","paddingLeft","paddingRight","height","_ref4","_ref5","paddingTop","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","translateX","translateY","testValueType","dimensionValueTypes","percent","degrees","vw","vh","parse","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","Map","forEach","removedTransforms","visualElement","getValue","get","removeNonTranslationalTransform","render","measureInitialState","restore","_a","measureEndState","suspendedScrollY","scrollTo","complete","clear","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","add","read","resolveKeyframes","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","delete","cancel","resume","isColorString","testProp","Boolean","isString","singleColorRegex","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","c","alpha","floatRegex","rgbUnit","round","clamp","clampRgbUnit","rgba","red","green","blue","alpha$1","sanitize","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","colorRegex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","unit","defaultValue","functionRegex","functions","join","defaultValueTypes","numberValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","memo","result","isAnimatable","isArray","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","pow","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","restDelta","state","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","next","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","p","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","definition","x1","y1","x2","y2","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","passTimestamp","start","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Element","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","animation","valueName","keyframeOptions","animate","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","acceleratedValues","HTMLElement","getProps","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","cancelAll","prevProgress","onFrame","observeTimeline","cancelTimeline","methodName","controls","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","getContextWindow","ownerDocument","defaultView","SubscriptionManager","subscriptions","addUniqueItem","removeItem","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","prev","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","WillChangeMotionValue","counts","styleName","getWillChangeName","prevCount","hasRemoved","newCount","addValueToWillChange","applyWillChange","willChange","props","style","addValue","isMotionValue","elementDragControls","WeakMap","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","presenceContext","isPresent","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","postRender","removeWillChange","animationState","setActive","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","isRefObject","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","initial","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","addScaleCorrector","defaultScaleCorrectors","group","register","didUpdate","safeToRemove","setOptions","onExitComplete","getSnapshotBeforeUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","microtask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","context","useContext","PresenceContext","id","useId","useEffect","usePresence","LayoutGroupContext","jsx","SwitchLayoutGroupContext","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","latestValues","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","children","isDirty","child","sort","getOptimisedAppearId","optimizedAppearDataAttribute","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","isOptimisedAppearTree","projectionNode","hasCheckedOptimisedAppear","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","MotionDebug","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","mount","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","shouldReduceMotion","unmount","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","HandoffCancelAllAnimations","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","steps","process","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","rotateZ","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","resolveMotionValue","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","scaleCorrectors","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","toLowerCase","includes","roundPoint","maxDistance","DocumentProjectionNode","ref","document","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","subscribe","ProjectionNode","shallowCompare","prevLength","resolveVariant","custom","resolveVariantFromProps","setMotionValue","hasValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","getState","valueTarget","HandoffAppearAnimations","appearId","resolveFinalValueInKeyframes","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","variantPriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","checkVariantsDidChange","createTypeState","isActive","prevResolvedValues","createState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","prop","propIsVariant","isVariantLabel","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","isAnimationControls","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","isKeyframesTarget","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","reset","createAnimationState","updateAnimationControlsSubscription","unmountControls","prevAnimate","prevIsPresent","prevPresenceContext","exitAnimation","addHoverEvent","callbackName","handleEvent","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","onTapStart","removePointerListener","removeFocusListener","focus","onFocus","isFocusVisible","matches","onBlur","hover","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","numVariantProps","variantProps","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","reducedMotionConfig","visualState","isVariantNode","isControllingVariants","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","isRenderScheduled","triggerBuild","renderInstance","renderState","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","isBrowser","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","updateFeatures","featureDefinitions","featureDefinition","isEnabled","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","variants","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","vars","HTMLVisualElement","renderHTML","defaultType","default","computedStyle","isCSSVariableName","buildHTMLStyles","childSubscription","textContent","SVGVisualElement","isSVGTag","camelCaseAttributes","camelToDash","getAttribute","buildSVGAttrs","renderSVG","domMax","renderer","createDomVisualElement","isSVGComponent","allowProjection","Fragment"],"sourceRoot":""}